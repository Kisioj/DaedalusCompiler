version: 2.1

references:
  restoreCache: &releaseBuildFilter
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\d+\.\d+\.\d+$/
executors:
  build-executor:
    working_directory: /workspace
    docker:
      - image: microsoft/dotnet:2.1-sdk
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
jobs:
  test:
    executor: build-executor
    steps:
      - checkout
      - run: dotnet restore
      - run: dotnet build
      - run: dotnet test /workspace/test/DaedalusCompiler.Tests/DaedalusCompiler.Tests.csproj
  build-release:
    executor: build-executor
    steps:
      - checkout
      - run: dotnet restore
      - run: dotnet publish -c Release
      - persist_to_workspace:
          root: /workspace/src/DaedalusCompiler/bin/Release/netcoreapp2.1
          paths:
            - publish
      - persist_to_workspace:
          root: /workspace/docs
          paths:
          - changelog
  verify-program-version-and-pack-to-zip:
    docker:
      - image: microsoft/dotnet:2-runtime
    working_directory: /workspace
    steps:
      - attach_workspace:
          at: ./shared-workspace
      - run:
          name: "Verify Program Version"
          command: export PROGRAM_V=$(dotnet shared-workspace/publish/DaedalusCompiler.dll --version) && echo "Program version $PROGRAM_V, Tag name $CIRCLE_TAG" && if [ $PROGRAM_V == $CIRCLE_TAG ]; then echo "Version of program is ok!"; else echo "Please adjust version of program!" && exit 1; fi
      - run:
          name: "Install ZIP program"
          command: apt-get update && apt-get -y install zip
      - run:
          name: "Pack Program with ZIP"
          command: mkdir packed-program && cd shared-workspace/publish && zip -r ../../packed-program/DaedalusCompiler"$CIRCLE_TAG".zip ./*
      - persist_to_workspace:
          root: /workspace
          paths:
            - packed-program
  build-image-and-dockerhub-publish:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t dotnet-dev -f Dotnet-Dockerfile .
      - run: docker run -v "$(pwd)":/usr/workspace dotnet-dev dotnet publish -c Release
      - run: docker build -t daedalus-compiler .
      - run: docker tag daedalus-compiler dziejekhorinis/daedalus-compiler:${CIRCLE_TAG#"v"}
      - run: docker tag daedalus-compiler dziejekhorinis/daedalus-compiler:latest
      - run: docker push dziejekhorinis/daedalus-compiler:${CIRCLE_TAG#"v"}
      - run: docker push dziejekhorinis/daedalus-compiler:latest
  publish-github-release:
    docker:
      - image: circleci/golang:1.12
    steps:
      - attach_workspace:
          at: ./shared-workspace
      - run: ls shared-workspace
      - run: ls shared-workspace/changelog
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$CIRCLE_TAG
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -b "$(cat shared-workspace/changelog/changes-$VERSION.html)" -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./shared-workspace/packed-program
workflows:
  version: 2
  main:
    jobs:
      - test
  make-release:
    jobs:
    - test:
        <<: *releaseBuildFilter
    - build-release:
        requires:
        - test
        <<: *releaseBuildFilter
    - verify-program-version-and-pack-to-zip:
        requires:
          - build-release
        <<: *releaseBuildFilter
    - build-image-and-dockerhub-publish:
        requires:
          - verify-program-version-and-pack-to-zip
        <<: *releaseBuildFilter
    - publish-github-release:
        requires:
          - verify-program-version-and-pack-to-zip
        <<: *releaseBuildFilter
        